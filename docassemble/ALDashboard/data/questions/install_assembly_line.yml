---
include:
  - nav.yml
---
imports:
  - requests
---
mandatory: True
code: |
  welcome
  basic_server_config
  recommended_api_config
  menu_shortcut_config
  save_config
  selected_mandatory_packages  
  al_install_done
  end_screen
---
code: |
  results = da_write_config(the_config)
  save_config = True
---
id: welcome
continue button field: welcome
question: |
  Document Assembly Line Installation  
---
code: |
  the_config = da_get_config()
  
  # Create some empty structures in config for new settings
  if not the_config.get('efile proxy'):
    the_config['efile proxy'] = {}
  if not the_config.get('google'):
    the_config['google'] = {}
  if not the_config.get('voicerss'):
    the_config['voicerss'] = {}  
---
id: configuration questions
continue button field: basic_server_config
question: |
  Basic Server Settings
subquestion: |
  Look over the settings below. Make sure that they match your
  organization's branding. These are **not** required for the 
  Assembly Line, but may leak out in log files and emails. You should
  get these right if you can.
fields:
  - Server title: the_config['default title']
    default: ${ the_config.get('default title') }
  - Server short title: the_config['default short title']
    default: ${ the_config.get('default short title') }
  - App name: the_config['appname']
    default: ${ the_config.get('appname') }
  - note: |
      ---
      Some features require background processing, which means you need
      the "Check-in" interval set. We recommend the default interval of
      6 seconds (6000 microseconds).
    #show if:
    #  code: |
    #    the_config.get('checkin interval') != 6000
  - Check-in interval: the_config['checkin interval']
    default: 6000
    #show if:
    #  code: |
    #    the_config.get('checkin interval') != 6000
  - note: |
      ---
      The Assembly Line makes extensive use of Font Awesome. Some icons
      may not work if you do not use font awesome as your icon set.
    #show if:
    #  code: |
    #    the_config.get('default icons') != 'font awesome'
  - Default icon set: the_config['default icons']
    default: font awesome
    #show if:
    #  code: |
    #    the_config.get('default icons') != 'font awesome'
comment: |
  default title: Suffolk LIT Lab test
  default short title: LIT Lab test
  appname: Suffolk Lit Lab test
  checkin interval: 6000
  default icons: font awesome
---
id: api configuration
continue button field: recommended_api_config
question: |
  Recommended API Configuration
subquestion: |
  Below is a list of API configurations that we recommend that you make.
  
  If you do not already have these APIs enabled, you may want to take a minute
  to sign up for each API. You can can use this page to make it a little
  easier to write the updated values in your configuration file.
  
  If you do not have the API key now, that's OK. We will add a placeholder in 
  your configuration file that may still make it easier to edit and update
  later.
fields:
  - note: |
      ---
      We recommend setting up the following "free" / generous free
      tier API keys:
      
      * Server-run API queries: [Google API for geocoding](https://developers.google.com/maps/documentation/geocoding/overview)
        (Use an IP address restriction--this server's IP address appears to be ${ bold(requests.get('https://checkip.amazonaws.com').text.strip() or "UNKNOWN") }) (credit card required)
      * Frontend browser API queries: [Google JavaScript API for maps](https://developers.google.com/maps/documentation/javascript/overview) / [Google places for autocompletion](https://developers.google.com/maps/documentation/places/web-service/overview)
        (Use a referer restriction ) (credit card required)
      * [VoiceRSS](http://www.voicerss.org/) screen reader (no credit card required)
      
      Please confirm that you have enabled "geocoding", "maps javascript" and "places" on
      your Google Cloud Console account. Billing must also be turned on,
      although you can set a quota well below the threshold that would trigger
      any costs.
      
      You should also set up the following:
      
      * Mail (SendGrid or Mailgun have free tiers, but limited)
      * Twilio for SMS
  - Google API key (for geocoding, IP restrictions): the_config['google']['api key']
    default: ${ the_config['google'].get('api key') }
  - Google Maps API key (for maps and address auto completion): the_config['google']['google maps api key']
    default: ${ the_config['google'].get('api key') }
  - Enable VoiceRSS: the_config['voicerss']['enable']
    datatype: yesno
    default: True
  - VoiceRSS API Key: the_config['voicerss']['key']
    default: ${ the_config['voicerss'].get('key') }    
  - note: |
      % if not the_config.get('mail'):
      ** You do not appear to have a valid mail configuration.**
      Follow the Docassemble instructions to [setup a mail 
      server](https://docassemble.org/docs/config.html#mail) **after**
      you finish this installation process.
      
      We recommend using SendGrid, not an SMTP server.
      % endif
  - note: |
      ---
      If you choose to use the [e-file proxy server](https://github.com/SuffolkLITLab/EfileProxyServer),
      you should also generate or [get an API token](https://github.com/SuffolkLITLab/EfileProxyServer/#making-api-tokens)
      to authenticate this server's connection.
      
      Using the e-file connection is rare. Feel free to skip this step. 
  - Skip efile configuration: skip_efile
    datatype: yesno
  - E-file server URL: the_config['efile proxy']['url']
    default: ${ the_config['efile proxy'].get('url') or "https://efile.suffolklitlab.org:9000" }
    hide if: skip_efile
  - E-file proxy api key: the_config['efile proxy']['api key']
    default: ${ the_config['efile proxy'].get('api key') }
    hide if: skip_efile
  - E-file proxy JeffNet api key (rare): the_config['efile proxy']['jeffnet api token']
    default: ${ the_config['efile proxy'].get('jeffnet api token') }
    hide if: skip_efile
      
  
comment: |
  words:
  - docassemble.base:data/sources/us-words.yml
  - docassemble.LanguagePack:data/sources/es-words.yml

  github issues:
    username: suffolklitlab-issues
    token: 
    default repository owner: suffolklitlab
    allowed repository owners:
    - suffolklitlab
    - suffolklitlab-issues
    - masslegalhelp
  github readonly:
    username: suffolklitlab-issues
    password: 
    type: basic
  administrative interviews:
  - docassemble.ALWeaver:data/questions/assembly_line.yml
  - docassemble.ALDashboard:data/questions/menu.yml
  playground examples:
  - docassemble.AssemblyLinePlaygroundExamples:data/questions/examples.yml
  - docassemble.base:data/questions/example-list.yml
---
variable name: mandatory_packages
data:
  "https://github.com/SuffolkLITLab/docassemble-ALToolbox":
    label: ALToolbox
    help: |
      Utility functions and web components that may help with or without the
      Assembly Line framework.
  "https://github.com/SuffolkLITLab/docassemble-AssemblyLine":
    label: Assembly Line (Core)
    help: |
      The core Assembly Line runtime code, with default styling.
---
variable name: optional_packages
data:
  "https://github.com/SuffolkLITLab/docassemble-ALWeaver":
    label: ALWeaver
    help: |
      A tool to help turn templates into draft interviews quickly.
  "https://github.com/SuffolkLITLab/docassemble-InterviewStats/":
    label: InterviewStats
    help: |
      A package to help view detailed statistics generated by 
      store_interview_snapshot() (created by default just before
      download for all Assembly Line packages)
  "https://github.com/SuffolkLITLab/docassemble-ALMassachusetts":
    label: Massachusetts-specific questions
  "https://github.com/SuffolkLITLab/docassemble-MassAccess":
    label: |
      Mass Access / Court Forms Online branding
    help: |
      Logo and branding for Court Forms Online / Suffolk LIT Lab
  "https://github.com/SuffolkLITLab/docassemble-ALDashboard":
    label: ALDashboard
    help: |
      A menu and dashboard for small administrative tasks
  "https://github.com/SuffolkLITLab/docassemble-EFSPIntegration/":
    label: E-filing client
    help: |
      E-filing client for Tyler EFM
---
modules:
  - .aldashboard
---
code: |
  for pkg_url in selected_mandatory_packages.true_values() + selected_optional_packages.true_values():
    pkgname = install_from_github_url(pkg_url)
  reset(pkgname)
  al_install_done = True
---
question: |
  What packages do you want to install or update?  
fields:
  - Core packages: selected_mandatory_packages
    datatype: checkboxes
    code: |
      [{key: mandatory_packages[key].get('label'), "help": mandatory_packages[key].get('help')} for key in mandatory_packages]
    default:
      - https://github.com/SuffolkLITLab/docassemble-ALToolbox
      - https://github.com/SuffolkLITLab/docassemble-AssemblyLine
    none of the above: False      
  - Optional packages: selected_optional_packages
    datatype: checkboxes
    code: |
      [{key: optional_packages[key].get('label'), "help": optional_packages[key].get('help')} for key in optional_packages]  
    none of the above: False      
---
event: end_screen
question: |
  Installation complete
subquestion: |
  Check the status in the [Package management page](/updatepackage)
  
  